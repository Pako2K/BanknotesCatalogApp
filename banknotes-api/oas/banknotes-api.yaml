openapi: 3.0.2
info:
  title: Banknotes API
  description: API for the Banknotes Database.
  version: "1.0.0"
  contact:
    email: admin@banknotes.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/banknotes-catalogue/banknotes-api/1.0.0
  - description: Banknotes Catalogue and Collection Management API
    url: https://banknotes-db/banknotes-api/1.0.0
tags:
  - name: Territories
    description: Manage geographical organization of banknotes
  - name: Currencies
    description: Manage currency information
  - name: Series
    description: Manage currency series information
  - name: Banknotes
    description: Manage denominations information
  - name: Variants
    description: Manage banknote variants information
  - name: Items
    description: Manage banknotes in the user collection
  - name: Stats
    description: Retrieve statistics about the catalogue and the user collection
  - name: Miscellanea
    description: Set of operations to retrieve static data

paths:
  /continents:
    get:
      tags:
      - Territories
      summary: Get list of continents.
      description: Returns the list of defined continents, sorted alphabetically
      operationId: continentsGET
      responses:
        "200":
          description: List of continents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/continent'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  /territory-types:
    get:
      tags:
      - Territories
      summary: Get territory types.
      description: Returns a list of territory types.
      operationId: territoryTypesGET
      responses:
        "200":
          description: List of territory types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryType'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'


  /territory/{territoryId}:
    get:
      tags:
      - Territories
      summary: Get all the info about a territory.
      description: Returns the info about a country or territory.
      operationId: territoryByIdGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory
      responses:
        "200":
          description: Country or territory complete info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/territory'
        "400":
          description: Invalid request. The territory Id must be an integer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  

  /territories/stats:
    get:
      tags:
      - Stats
      summary: Get list of countries and territories.
      description: Returns a list of countries and territries with their main features and statistics about their currencies and banknotes.
      operationId: territoriesStatsGET
      responses:
        "200":
          description: List of countries and territories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  
  /currencies/stats:
    get:
      tags: 
      - Currencies
      summary: Get list of currencies.
      description: Returns a list of currencies with their main features and statistics about their banknotes.
      operationId: currenciesStatsGET
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/currencies:
    get:
      tags: 
      - Currencies
      summary: Get list of currencies for a specific country.
      description: Returns a list of currencies used by a country with their main features and statistics about their banknotes.
      operationId: territoryByIdCurrenciesGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory      
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}:
    get:
      tags:
      - Currencies
      summary: Get all the info about a currency
      description: Returns the info about a currency.
      operationId: currencyByIdGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Currency complete info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/series:
    get:
      tags:
      - Series
      summary: Get summary of series for a currency
      description: Returns the info about the different series of a currency.
      operationId: currencyByIdSeriesGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Summary and stats of the Series belonging to the specified currency ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
  
  /banknotes/denominations:
    get:
      tags: 
      - Banknotes
      summary: Get list of denominations.
      description: Returns a list of denominations and statistics.
      operationId: banknotesDenominationsGET
      parameters:
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations from this year
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations up to this year
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/banknotes:
    get:
      tags:
      - Banknotes
      summary: Get summary of banknotes(denominations) for a currency
      description: Returns the info about the different banknotes of a currency.
      operationId: currencyByIdBanknotesGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Summary and stats of the banknotes belonging to the specified currency ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/banknoteStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
  
  /variants/years:
    get:
      tags: 
      - Variants
      summary: Get list of variants per year.
      description: Returns a list of issue years and statistics.
      operationId: variantsYearsGET
      responses:
        "200":
          description: List of years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYear'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
 
 
  /currency/{currencyId}/variants/years:
    get:
      tags:
      - Variants
      summary: Get summary of banknotes per issued year for a currency
      description: Returns the info about the different years when variants were issued for a currency.
      operationId: currencyByIdVariantsYearsGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Summary and stats of the banknotes belonging to the specified currency ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
  /series/{seriesId}/variants:
    get:
      tags:
      - Variants
      summary: Get all variants for a given series
      description: Returns the info about the different variants belonging to the giving series.
      operationId: seriesByIdVariantsGET
      parameters:
      - in: path
        required: true
        name: seriesId
        schema:
          type: integer
        description: Id of the series
      responses:
        "200":
          description: List of variants for the given series ID
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denomination:
                      type: integer
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/variantKey'
                        - type: object
                          properties:
                            description:
                              type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                 
  /variants:
    get:
      tags: 
      - Variants
      summary: Get list of variants.
      description: Returns a list of variants according to the specified search parameters. At least one search parameter must be provided. No more than 500 variants will be returned
      operationId: variantsGET
      parameters:
      - in: query
        name: contId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries in this Continent
      - in: query
        name: terTypeId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries of this type
      - in: query
        name: terStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or after this year
      - in: query
        name: terStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or before this year
      - in: query
        name: terEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or after this year
      - in: query
        name: terEndtDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or before this year
      - in: query
        name: curStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or after this year
      - in: query
        name: curStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or before this year
      - in: query
        name: curEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or after this year
      - in: query
        name: curEndDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or before this year
      - in: query
        name: minDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or high denomination
      - in: query
        name: maxDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or lower denomination
      - in: query
        name: issueDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or after this year
      - in: query
        name: issueDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or before this year  
      responses:
        "200":
          description: List of variants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variantTree'
        "400":
          description: Invalid request. At least one query parameter must be provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /items/stats:
    get:
      tags:
      - Items
      summary: Get Collection stats 
      description: Retrieves the collection statistics for the active sesion's user
      operationId: itemsStatsGET
      parameters:
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: grouping
        schema:
          type: string
          enum:
          - territory
          - currency
          - denomination
          - year
        required: true
        description: Statistics based on this grouping criteria
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve banknotes from this year (for denominations)
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve banknotes up to this year (for denominations)

      responses:
        "200":
          description: Success. Statistics returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemStats'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'  
                
  
  /items:
    get:
      tags: 
      - Items
      summary: Get list of variants and the grade and price of the item, if available.
      description: Returns a list of items according to the specified search parameters. At least one search parameter must be provided. No more than 500 items will be returned
      operationId: itemsGET
      parameters:
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: contId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries in this Continent
      - in: query
        name: terTypeId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries of this type
      - in: query
        name: terStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or after this year
      - in: query
        name: terStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or before this year
      - in: query
        name: terEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or after this year
      - in: query
        name: terEndtDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or before this year
      - in: query
        name: curStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or after this year
      - in: query
        name: curStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or before this year
      - in: query
        name: curEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or after this year
      - in: query
        name: curEndDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or before this year
      - in: query
        name: minDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or high denomination
      - in: query
        name: maxDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or lower denomination
      - in: query
        name: issueDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or after this year
      - in: query
        name: issueDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or before this year  
      responses:
        "200":
          description: List of variants and items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemTree'
        "400":
          description: Invalid request. Cookie paramter is mandatory and at least one query parameter must be provided. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/items/stats:
    get:
      tags: 
      - Items
      summary: Get Collection stats for a specific territory
      description: Retrieves the collection statistics for the active sesion's user and the provided territory and grouping critera
      operationId: territoryByIdItemsStatsGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: grouping
        schema:
          type: string
          enum:
          - currencies
          - series
          - denomination
          - year
        required: true
        description: Statistics based on this grouping criteria
      responses:
        "200":
          description: Success. Statistics returned
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemStats'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'  
                
  
  /currency/{currencyId}/items/stats:
    get:
      tags: 
      - Items
      summary: Get Collection stats for a specific currency
      description: Retrieves the collection statistics for the active sesion's user and the provided currency and grouping critera
      operationId: currencyByIdItemsStatsGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: grouping
        schema:
          type: string
          enum:
          - series
          - denomination
          - year
        required: true
        description: Statistics based on this grouping criteria
      responses:
        "200":
          description: Success. Statistics returned
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemStats'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'  
                
  /series/{seriesId}/items:
    get:
      tags: 
      - Items
      summary: Get Collection items for a specific series
      description: Retrieves the collection items for the active sesion's user and the provided series
      operationId: seriesByIdItemsGET
      parameters:
      - in: path
        required: true
        name: seriesId
        schema:
          type: integer
        description: Id of the series
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the items are retrieved
      responses:
        "200":
          description: Success. List of Items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denomination:
                      type: integer
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/variantKey'
                        - type: object
                          properties:
                            description:
                              type: string
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/itemKey'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
                
  /grades:              
    get:
      tags: 
      - Miscellanea
      summary: Get banknotes grades
      description: Retrieves the standard grades used to evaluate th conservation of the banknotes
      operationId: gradesGET
      responses:
        "200":
          description: Success. 
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/grade'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'          
                
components:
  securitySchemes:
    basicAuthentication:
      type: http
      scheme: basic

  schemas:
    continent:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string


    territoryTypeKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
          
          
    territoryType:
      allOf:    
      - $ref: '#/components/schemas/territoryTypeKey'
      - type: object
        required:
        - abbreviation
        - description
        properties:
          abbreviation:
            type: string
          description:
            type: string


    territoryKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string


    territory:
     allOf:    
      - $ref: '#/components/schemas/territoryKey'
      - type: object
        required:
        - continent
        - territoryType
        - officialName
        - start
        properties:
          continent:
            $ref: '#/components/schemas/continent'
          territoryType:
            $ref: '#/components/schemas/territoryTypeKey'
          iso2:
            $ref: '#/components/schemas/iso2'
          officialName:
            type: string
          start:
            type: integer
          end:
            type: integer
          parent:
           $ref: '#/components/schemas/territoryKey'
          predecessors:
            type: array
            items:
              $ref: '#/components/schemas/territoryKey'
          successors:
            type: array
            items:
             $ref: '#/components/schemas/territoryKey'
          description:
            type: string


    territoryStats:
      type: object
      required:
      - id
      - continentId
      - territoryTypeId
      - name
      - start
      - numCurrencies
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        id:
          type: integer
        continentId:
          type: integer
        territoryTypeId:
          type: integer
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        start:
          type: integer
        end:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    currency:
      type: object
      required:
      - id
      - territory
      - name
      - fullName
      - start
      properties:
        id:
          type: integer
        territory:
          type: object
          properties:
            continentId:
              type: integer
            continentName:
              type: string
            id:
              type: integer
            iso3:
              $ref: '#/components/schemas/iso3'
            name:
              type: string
        symbol:
          type: string
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        fullName:
          type: string
        units:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: number
              abbrevation:
                type: string
        start:
          type: string
        end:
          type: string
        predecessor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            iso3:
              $ref: '#/components/schemas/iso3'
            rate:
              type: number
        successor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            iso3:
              $ref: '#/components/schemas/iso3'
            rate:
              type: number
        description:
          type: string


    currencyStats:
      type: object
      required:
      - id
      - continentId
      - territoryId
      - territoryName
      - currencyType
      - name
      - start
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        id:
          type: integer
        continentId:
          type: integer
        territoryId:
          type: integer
        territoryName:
          type: string
        currencyType:
          type: string
          enum: [OWNED, SHARED]
        symbol:
          type: string
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        start:
          type: integer
        end:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    seriesStats:
      type: object
      required:
      - id
      - name
      - start
      - numDenominations
      - numVariants
      properties:
        id:
          type: integer
        name:
          type: string
        start:
          type: integer
        end:
          type: integer
        numDenominations:
          type: integer
        numVariants:
          type: integer
          
          
    denominationStats:
      type: object
      required:
      - continentId
      - denomination
      - numTerritories
      - numCurrencies
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        continentId:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numVariants:
          type: integer


    banknoteStats:
      type: object
      required:
      - denomination
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        numSeries:
          type: integer
        numVariants:
          type: integer


    issueYear:
      type: object
      required:
      - issueYear
      - continentId
      - numTerritories
      - numCurrencies
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        issueYear:
          type: number
        continentId:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    issueYearStats:
      type: object
      required:
      - issueYear
      - numDenominations
      - numVariants
      properties:
        issueYear:
          type: number
        numDenominations:
          type: integer
        numVariants:
          type: integer


    variantKey:
      type: object
      required:
      - variantId
      - catalogueId
      - issueYear
      properties:
        variantId:
          type: integer
        catalogueId:
          type: integer
        issueYear:
          type: integer
        printedDate:
          type: string

    variantTree:
      allOf:    
        - $ref: '#/components/schemas/variantKey'
        - type: object
          required:
          - denomination
          - seriesId
          - seriesName
          - currencyId
          - currencyName
          - territoryId
          - territoryName
          properties:
            denomination:
              type: integer
            seriesId:
              type: integer
            seriesName:
              type: string
            currencyId:
              type: integer
            currencyName:
              type: string
            territoryId:
              type: integer
            territoryName:
              type: string
   
   
    itemKey:
      type: object
      required:
      - itemId
      - grade
      - gradeValue
      - price
      properties:
        itemId:
          type: integer
        grade:
          type: string
        gradeValue:
          type: integer
        price:
          type: number

    itemTree: 
      allOf:    
        - $ref: '#/components/schemas/itemKey'
        - $ref: '#/components/schemas/variantTree'

    item:
      allOf:    
        - $ref: '#/components/schemas/itemKey'
        - type: object
          required:
          - variantId
          - quantity
          properties:
            variantId:
              type: integer
            quantity:
              type: integer
            seller:
              type: string
            purchaseDate:
              type: string
            description:
              type: string
          
          
    itemStats:
      type: object
      required:
      - id
      - numVariants
      - price
      properties:
        id:
          type: integer
          description: "id of the grouping field: territoryId, currencyId, denomination or year"  
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer
        price:
          type: number


    grade:
      type: object
      required:
      - value
      - grade
      - name
      - description
      properties:
        value:
          type: integer
        grade:
          type: string
        name:
          type: string
        description:
          type: string
          

    iso2:
      type: string
      maxLength: 2
      minLength: 2


    iso3:
      type: string
      maxLength: 3
      minLength: 3
    

    exception:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        description:
          type: string