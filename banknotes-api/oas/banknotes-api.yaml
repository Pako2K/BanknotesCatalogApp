openapi: 3.0.2
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/banknotes-catalogue/banknotes-api/1.0.0
  - description: Banknotes Catalogue and Collection Management API
    url: https://banknotes-db/1.0.0
info:
  title: Banknotes API
  description: API for the Banknotes Database.
  version: "1.0.0"
  contact:
    email: admin@banknotes.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Users
    description: Manage users and user sessions
  - name: Territories
    description: Manage geographical organization of banknotes
  - name: Currencies
    description: Manage currency information
  - name: Banknotes
    description: Manage denominations information
  - name: Variants
    description: Manage banknote variants information
  - name: Items
    description: Manage banknotes in the user colection

paths:
  /user:
    put:
      tags: 
      - Users
      summary: Create (register) a new user
      description: Creates a new user and a session for the new user (login session)
      operationId: userPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: User created
        "400":
          description: Invalid request. Some fields in the request are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User or email is already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
  /user/session:
    get:
      tags: 
      - Users
      summary: Log in and create session
      description: For the provided user a new session is returned in the cookie, if no session existed yet
      operationId: userSessionGET
      parameters:
      - in: header
        name: authorization
        schema:
          type: string
        required: true
        description: "Basic authoritazion. Value must be like 'Basic Y2hhcmxlczoxMjM0NQ=='. The second part is the 'user:pwd' encoded in base64"
      responses:
        "200":
          description: Login executed successfully or user was already logged in
          content:
            application/json:
              schema:
                type: object
                required: 
                - isAdmin
                - lastConnection
                properties:
                  isAdmin:
                    type: integer
                    description: 0 if false, 1 if true
                  lastConnection:
                    type: string
                    description: datetime in format 'dddd, DD MMMM YYYY, HH:mm'
        "401":
          description: Username or password is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

    delete:
      tags: 
      - Users
      summary: Log out and destroy session
      description: The provided session is destroyed, and the user logged out.
      operationId: userSessionDELETE
      responses:
        "200":
          description: Logout executed successfully or user not logged in
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  /user/session/ping:
    get:
      tags: 
      - Users
      summary: Check session state
      description: for the active session it resets the the expiration time and returns its value
      operationId: userSessionPingGET
      responses:
        "200":
          description: Ping executed successfully. If a session is active it returns the user name and the session expiration time. Otherwise it returns an empty user name and expiration = 0
          content:
            application/json:
              schema:
                type: object
                required: 
                - user
                - lastConnection
                properties:
                  user:
                    type: string
                    description: User name for the active session
                  lastConnection:
                    type: integer
                    description: Session expiration time in miliseconds
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'




  /continents:
    get:
      tags:
      - Territories
      summary: Get list of continents.
      description: Returns the list of available continents
      operationId: continentsGET
      responses:
        "200":
          description: List of continents
          content:
            application/json:
              schema:
                example: [{id: 1, name: "Africa"}, {id: 2, name: "Asia"}]
                type: array
                items:
                  $ref: '#/components/schemas/continent'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  /territory-types:
    get:
      tags:
      - Territories
      summary: Get list of territory types.
      description: Returns a list of territory types.
      operationId: territoryTypesGET
      responses:
        "200":
          description: List of territory types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryType'
                  
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  /territories:
    get:
      tags:
      - Territories
      summary: Get list of countries and territories.
      description: Returns a list of countries and territries with their main features and statistics about their currencies and banknotes.
      operationId: territoriesGET
      responses:
        "200":
          description: List of countries and territories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}:
    get:
      tags:
      - Territories
      summary: Get all the info about a country or territory.
      description: Returns the info about a country or territory.
      operationId: territoryByIdGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory          
      responses:
        "200":
          description: Country or territory complete info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territory'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  
  /currencies:
    get:
      tags: 
      - Currencies
      summary: Get list of currencies.
      description: Returns a list of currencies with their main features and statistics about their banknotes.
      operationId: currenciesGET
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/currencies:
    get:
      tags: 
      - Currencies
      summary: Get list of currencies for a specific country.
      description: Returns a list of currencies used by a country with their main features and statistics about their banknotes.
      operationId: territoryByIdCurrenciesGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory      
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}:
    get:
      tags:
      - Currencies
      summary: Get all the info about a currency
      description: Returns the info about a currency.
      operationId: currencyByIdGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Ccurrency complete info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /banknotes/denominations:
    get:
      tags: 
      - Banknotes
      summary: Get list of denominations.
      description: Returns a list of denominations and statistics.
      operationId: banknotesDenominationsGET
      parameters:
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations from this year
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations up to this year
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denomination'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  
  /variants/years:
    get:
      tags: 
      - Variants
      summary: Get list of variants per year.
      description: Returns a list of issue years and statistics.
      operationId: variantsYearsGET
      responses:
        "200":
          description: List of years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYear'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  /variants:
    get:
      tags: 
      - Variants
      summary: Get list of variants.
      description: Returns a list of variants according to the specified search parameters. At least one search parameter must be provided. No more than 500 variants will be returned
      operationId: variantsGET
      parameters:
      - in: query
        name: contId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries in this Continent
      - in: query
        name: terTypeId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries of this type
      - in: query
        name: terStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or after this year
      - in: query
        name: terStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or before this year
      - in: query
        name: terEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or after this year
      - in: query
        name: terEndtDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or before this year
      - in: query
        name: curStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or after this year
      - in: query
        name: curStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or before this year
      - in: query
        name: curEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or after this year
      - in: query
        name: curEndDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or before this year
      - in: query
        name: minDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or high denomination
      - in: query
        name: maxDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or lower denomination
      - in: query
        name: issueDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or after this year
      - in: query
        name: issueDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or before this year  
      responses:
        "200":
          description: List of variants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variant'
        "400":
          description: Invalid request. At least one query parameter must be provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /items/stats:
    get:
      tags:
      - Items
      summary: Get Collection stats 
      description: Retrieves the collection statistics for the active sesion's user
      operationId: itemsStatsGET
      parameters:
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: grouping
        schema:
          type: string
          enum:
          - territory
          - currency
          - denomination
          - year
        required: true
        description: Statistics based on this grouping criteria
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve banknotes from this year (for denominations)
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve banknotes up to this year (for denominations)

      responses:
        "200":
          description: Success. Statistics returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemStats'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'  
                
  
  /variants/items:
    get:
      tags: 
      - Items
      summary: Get list of variants and the grade and price of the item, if available.
      description: Returns a list of variants according to the specified search parameters. At least one search parameter must be provided. No more than 500 variants will be returned
      operationId: variantsItemsGET
      parameters:
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: contId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries in this Continent
      - in: query
        name: terTypeId
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries of this type
      - in: query
        name: terStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or after this year
      - in: query
        name: terStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries founded in or before this year
      - in: query
        name: terEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or after this year
      - in: query
        name: terEndtDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants from countries disappeared in or before this year
      - in: query
        name: curStartDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or after this year
      - in: query
        name: curStartDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies created in or before this year
      - in: query
        name: curEndDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or after this year
      - in: query
        name: curEndDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants of currencies disappeared in or before this year
      - in: query
        name: minDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or high denomination
      - in: query
        name: maxDenom
        schema:
          type: integer
        required: false
        description: Retrieve variants with this or lower denomination
      - in: query
        name: issueDateFrom
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or after this year
      - in: query
        name: issueDateTo
        schema:
          type: integer
        required: false
        description: Retrieve variants with issue date in or before this year  
      responses:
        "200":
          description: List of variants and items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variantItem'
        "400":
          description: Invalid request. Cookie paramter is mandatory and at least one query parameter must be provided. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/items/stats:
    get:
      tags: 
      - Items
      summary: Get Collection stats for a specific territory
      description: Retrieves the collection statistics for the active sesion's user and the provided territory
      operationId: territoryByIdItemsStatsGET
      parameters:
      - in: path
        required: true
        name: territoryId
        schema:
          type: integer
        description: Id of the territory
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the statistics are retrieved
      - in: query
        name: grouping
        schema:
          type: string
          enum:
          - currencies
          - series
          - denomination
          - year
        required: true
        description: Statistics based on this grouping criteria
      responses:
        "200":
          description: Success. Statistics returned
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemStats'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'  
                
  
  
                
                
components:
  schemas:
    user:
      type: object
      required:
      - username
      - email
      - password
      properties:
        username:
          type: string
          maxLength: 16
          minLength: 3
          pattern: /[A-Z 0-9]/gi
        email:
          type: string
          pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/gi
        password:
          type: string
          description: base64 encoded password
          minLength: 8
          
          
    continent:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Africa"
      example:
        name: name
        id: 0
    
    
    territory:
      type: object
      required:
      - id
      - continentId
      - territoryTypeId
      - name
      - officialName
      - start
      properties:
        id:
          type: integer
        continent:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        territoryType:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        iso2:
          $ref: '#/components/schemas/iso2'
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        officialName:
          type: string
        start:
          type: integer
        end:
          type: integer
        parent:
          type: object
          properties:  
            id:
              type: integer
            name:
              type: string
            iso3:
              $ref: '#/components/schemas/iso3'
        predecessors:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              iso3:
                $ref: '#/components/schemas/iso3'
        successors:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              iso3:
                $ref: '#/components/schemas/iso3'


    territoryStats:
      type: object
      required:
      - id
      - continentId
      - territoryTypeId
      - name
      - start
      - numCurrencies
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        id:
          type: integer
        continentId:
          type: integer
        territoryTypeId:
          type: integer
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        start:
          type: integer
        end:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    territoryType:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
        abbrevation:
          type: string
        description:
          type: string


    currency:
      type: object
      required:
      - id
      - territory
      - name
      - fullName
      - start
      properties:
        id:
          type: integer
        territory:
          type: object
          properties:
            continentId:
              type: integer
            id:
              type: integer
            iso3:
              $ref: '#/components/schemas/iso3'
            name:
              type: string
        symbol:
          type: string
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        fullName:
          type: string
        units:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: number
              abbrevation:
                type: string
        start:
          type: string
        end:
          type: string
        predecessor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            iso3:
              $ref: '#/components/schemas/iso3'
            rate:
              type: number
        successor:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            iso3:
              $ref: '#/components/schemas/iso3'
            rate:
              type: number
        description:
          type: string


    currencyStats:
      type: object
      required:
      - id
      - continentId
      - territoryId
      - territoryName
      - currencyType
      - name
      - start
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        id:
          type: integer
        continentId:
          type: integer
        territoryId:
          type: integer
        territoryName:
          type: string
        currencyType:
          type: string
          enum: [OWNED, SHARED]
        symbol:
          type: string
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
        start:
          type: integer
        end:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    denomination:
      type: object
      required:
      - continentId
      - denomination
      - numTerritories
      - numCurrencies
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        continentId:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numVariants:
          type: integer


    issueYear:
      type: object
      required:
      - issueYear
      - continentId
      - numTerritories
      - numCurrencies
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        issueYear:
          type: number
        continentId:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer


    variant:
      type: object
      required:
      - catalogueId
      - denomination
      - issueYear
      - seriesId
      - seriesName
      - currencyId
      - currencyName
      - territoryId
      - territoryName
      properties:
        catalogueId:
          type: number
        denomination:
          type: number
        issueYear:
          type: number
        printedDate:
          type: string
        seriesId:
          type: number
        seriesName:
          type: string
        currencyId:
          type: number
        currencyName:
          type: string
        territoryId:
          type: number
        territoryName:
          type: string
     
    variantItem: 
      allOf:    
        - $ref: '#/components/schemas/variant'
        - type: object
          properties:
            grade:
              type: string
            price:
              type: number
        
    itemStats:
      type: object
      required:
      - id
      - numVariants
      - price
      properties:
        id:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer
        price:
          type: number

    iso2:
      type: string
      maxLength: 2
      minLength: 2

    iso3:
      type: string
      maxLength: 3
      minLength: 3
          
    exception:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        description:
          type: string