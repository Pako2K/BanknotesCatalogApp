openapi: 3.0.2
info:
  title: Banknotes API
  description: API for the Banknotes Database.
  version: "1.0.0"
  contact:
    email: admin@banknotes.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/banknotes-catalogue/banknotes-api/1.0.0
  - description: Banknotes Catalogue and Collection Management API
    url: https://banknotes-db/banknotes-api/1.0.0
tags:
  - name: Territories
    description: Manage geographical organization of banknotes
  - name: Currencies
    description: Manage currency information
  - name: Series
    description: Manage currency series information
  - name: Banknotes
    description: Manage denominations information
  - name: Variants
    description: Manage banknote variants information
  - name: Items
    description: Manage banknotes in the user collection
  - name: Statistics
    description: Retrieve statistics about the catalogue and the user collection
  - name: Miscellanea
    description: Set of operations to retrieve static data


paths:
  /continents:
    get:
      tags:
      - Territories
      summary: Get list of continents.
      description: Returns the list of defined continents, sorted alphabetically
      operationId: continentsGET
      responses:
        "200":
          description: List of continents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/continent'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  /territory-types:
    get:
      tags:
      - Territories
      summary: Get territory types.
      description: Returns a list of territory types.
      operationId: territoryTypesGET
      responses:
        "200":
          description: List of territory types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryType'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'


  /territory/{territoryId}:
    get:
      tags:
      - Territories
      summary: Get all the info about a territory.
      description: Returns the info about a country or territory.
      operationId: territoryByIdGET
      parameters:
      - $ref: '#/components/parameters/territoryId'
      responses:
        "200":
          description: Country or territory complete info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/territory'
        "400":
          description: Invalid request. The territory Id must be an integer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  

  /territories/variants/stats:
    get:
      tags:
      - Statistics
      summary: Get statistics about banknotes in catalogue for each territory.
      description: Returns statistics for the existing banknotes in the catalogue, based on territories.
      operationId: territoriesVariantsStatsGET
      responses:
        "200":
          description: List of territories with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  
  /territories/items/stats:
    get:
      tags:
      - Statistics
      summary: Get statistics about banknotes in collection for each territory.
      description: Returns statistics for the existing banknotes in the catalogue and in the user collection (the user must have an active session).
      operationId: territoriesItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of territories with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/territoryColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  
  /currencies/variants/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in catalogue for each currency.
      description: Returns a list of currencies in the catalogue with their main features and statistics.
      operationId: currenciesVariantsStatsGET
      responses:
        "200":
          description: List of currencies with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currencies/items/stats:
    get:
      tags:
      - Statistics
      summary: Get statistics about banknotes in collection for each currency.
      description: Returns statistics for the existing banknotes in the catalogue and in the user collection (the user must have an active session).
      operationId: currenciesItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of currencies with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
       
  /denominations/variants/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in catalogue for each denomination.
      description: Returns a list of denominations in the catalogue with statistics.
      operationId: denominationsVariantsStatsGET
      parameters:
      - in: query
        name: continentId
        schema:
          type: integer
        required: false
        description: Retrieve denominations from countries in this continent
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued in or after this year
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued up to this year
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
           
  /denominations/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in the user collection for each denomination.
      description: Returns a list of denominations in the catalogue with statistics including the user collection.
      operationId: denominationsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      - in: query
        name: continentId
        schema:
          type: integer
        required: false
        description: Retrieve denominations from countries in this continent
      - in: query
        name: fromYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued in or after this year
      - in: query
        name: toYear
        schema:
          type: integer
        required: false
        description: Retrieve denominations issued up to this year
      responses:
        "200":
          description: List of denominations with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                

  /issue-years/variants/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in catalogue based on the year of issue.
      description: Returns a list of issue-years for banknotes in the catalogue with statistics.
      operationId: issueYearsVariantsStatsGET
      parameters:
      - in: query
        name: continentId
        schema:
          type: integer
        required: false
        description: Retrieve issue-years from countries in this continent
      responses:
        "200":
          description: List of years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
         
         
  /issue-years/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in collection based on the year of issue.
      description: Returns a list of issue-years for banknotes in the catalogue and the user collection with statistics.
      operationId: issueYearsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      - in: query
        name: continentId
        schema:
          type: integer
        required: false
        description: Retrieve issue-years from countries in this continent
      responses:
        "200":
          description: List of years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

  
  /territory/{territoryId}/currencies/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about banknotes in catalogue for each currency used in a specific territory.
      description: Returns a list of currencies in the catalogue used in a specific territory, with their main features and statistics.
      operationId: territoryByIdCurrenciesVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'  
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyByTerCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/currencies/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in collection for each currency used in a territory.
      description: Returns statistics per currency for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a territory.
      operationId: territoryByIdCurrenciesItemssStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of currencies with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currencyByTerColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
  
  /territory/{territoryId}/series/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about banknotes in catalogue for each series of a specific territory.
      description: Returns a list of series in the catalogue used in a specific territory, with their main features and statistics.
      operationId: territoryByIdSeriesVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'  
      responses:
        "200":
          description: List of series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/series/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in collection for each series of a territory.
      description: Returns statistics per series for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a territory.
      operationId: territoryByIdSeriesItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of series with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
              
  /territory/{territoryId}/denominations/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about denominations in catalogue for a specific territory.
      description: Returns a list of denominations in the catalogue used in a specific territory, with their statistics.
      operationId: territoryByIdDenominationsVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'  
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationByTerCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/denominations/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about denominations in collection for a territory.
      description: Returns statistics per denomination for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a territory.
      operationId: territoryByIdDenominationsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of denominations with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationByTerColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                

  /territory/{territoryId}/issue-years/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about issue years in catalogue for a specific territory.
      description: Returns a list of issue years in the catalogue used in a specific territory, with their statistics.
      operationId: territoryByIdIssueYearsVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'  
      responses:
        "200":
          description: List of issue years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearByTerCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /territory/{territoryId}/issue-years/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about issue years in collection for a territory.
      description: Returns statistics per issue year for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a territory.
      operationId: territoryByIdIssueYearsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/territoryId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of denominations with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearByTerColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
         
  /currency/{currencyId}/series/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about banknotes in catalogue for each series of a specific currency.
      description: Returns a list of series in the catalogue used in a specific currency, with their main features and statistics.
      operationId: currencyByIdSeriesVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'  
      responses:
        "200":
          description: List of series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesByCurCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/series/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about banknotes in collection for each series of a currency.
      description: Returns statistics per series for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a currency.
      operationId: currencyByIdSeriesItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of series with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesByCurColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                

  /currency/{currencyId}/denominations/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about denominations in catalogue for a specific currency.
      description: Returns a list of denominations in the catalogue used in a specific currency, with their statistics.
      operationId: currencyByIdDenominationsVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'  
      responses:
        "200":
          description: List of denominations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationByCurCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/denominations/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about denominations in collection for a currency.
      description: Returns statistics per denomination for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a currency.
      operationId: currencyByIdDenominationsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of denominations with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/denominationByCurColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
  /currency/{currencyId}/issue-years/variants/stats:
    get:
      tags: 
       - Statistics
      summary: Get statistics about issue years in catalogue for a specific currency.
      description: Returns a list of issue years in the catalogue used in a specific currency, with their statistics.
      operationId: currencyByIdIssueYearsVariantsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'  
      responses:
        "200":
          description: List of issue years
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearByCurCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/issue-years/items/stats:
    get:
      tags: 
      - Statistics
      summary: Get statistics about issue years in collection for a currency.
      description: Returns statistics per issue year for the existing banknotes in the catalogue and in the user collection (the user must have an active session), used in a currency.
      operationId: currencyByIdIssueYearsItemsStatsGET
      parameters:
      - $ref: '#/components/parameters/currencyId'
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      responses:
        "200":
          description: List of denominations with statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issueYearByCurColStats'
        "400":
          description: Invalid request. Missing cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: Session id or username is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
  /currency/{currencyId}:
    get:
      tags:
      - Currencies
      summary: Get all the info about a currency
      description: Returns the info about a currency.
      operationId: currencyByIdGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Currency complete info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /currency/{currencyId}/series:
    get:
      tags:
      - Series
      summary: Get summary of series for a currency
      description: Returns the info about the different series of a currency.
      operationId: currencyByIdSeriesGET
      parameters:
      - in: path
        required: true
        name: currencyId
        schema:
          type: integer
        description: Id of the currency
      responses:
        "200":
          description: Summary and stats of the Series belonging to the specified currency ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/seriesCatStats'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'


  /series/{seriesId}/variants:
    get:
      tags:
      - Variants
      summary: Get all variants for a given series
      description: Returns the info about the different variants belonging to the giving series.
      operationId: seriesByIdVariantsGET
      parameters:
      - in: path
        required: true
        name: seriesId
        schema:
          type: integer
        description: Id of the series
      responses:
        "200":
          description: List of variants for the given series ID
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denomination:
                      type: integer
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/variantKey'
                        - type: object
                          properties:
                            description:
                              type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                 
  /variants:
    get:
      tags: 
      - Variants
      summary: Get list of variants.
      description: Returns a list of variants according to the specified search parameters. At least one search parameter must be provided. No more than 500 variants will be returned
      operationId: variantsGET
      parameters:
      - $ref: '#/components/parameters/searchContinentId'
      - $ref: '#/components/parameters/searchTerTypeId'
      - $ref: '#/components/parameters/searchTerStartDateFrom'
      - $ref: '#/components/parameters/searchTerStartDateTo'
      - $ref: '#/components/parameters/searchTerEndDateFrom'
      - $ref: '#/components/parameters/searchTerEndDateTo'
      - $ref: '#/components/parameters/searchCurStartDateFrom'
      - $ref: '#/components/parameters/searchCurStartDateTo'
      - $ref: '#/components/parameters/searchCurEndDateFrom'
      - $ref: '#/components/parameters/searchCurEndDateTo'
      - $ref: '#/components/parameters/searchMinDenom'
      - $ref: '#/components/parameters/searchMaxDenom'
      - $ref: '#/components/parameters/searchIssueYearFrom'
      - $ref: '#/components/parameters/searchIssueYearTo'
      responses:
        "200":
          description: List of variants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variantTree'
        "400":
          description: Invalid request. At least one query parameter must be provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  
  
  /items:
    get:
      tags: 
      - Variants
      summary: Get list of variants and the grade and price of the item, if available.
      description: Returns a list of variants with the best grade and price, if it is in the users' collection, according to the specified search parameters. At least one search parameter must be provided. No more than 500 items will be returned
      operationId: itemsGET
      parameters:
      - $ref: '#/components/parameters/cookieUsername'
      - $ref: '#/components/parameters/cookieSessionId'
      - $ref: '#/components/parameters/searchContinentId'
      - $ref: '#/components/parameters/searchTerTypeId'
      - $ref: '#/components/parameters/searchTerStartDateFrom'
      - $ref: '#/components/parameters/searchTerStartDateTo'
      - $ref: '#/components/parameters/searchTerEndDateFrom'
      - $ref: '#/components/parameters/searchTerEndDateTo'
      - $ref: '#/components/parameters/searchCurStartDateFrom'
      - $ref: '#/components/parameters/searchCurStartDateTo'
      - $ref: '#/components/parameters/searchCurEndDateFrom'
      - $ref: '#/components/parameters/searchCurEndDateTo'
      - $ref: '#/components/parameters/searchMinDenom'
      - $ref: '#/components/parameters/searchMaxDenom'
      - $ref: '#/components/parameters/searchIssueYearFrom'
      - $ref: '#/components/parameters/searchIssueYearTo'
      responses:
        "200":
          description: List of variants and items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/itemTree'
        "400":
          description: Invalid request. Cookie paramter is mandatory and at least one query parameter must be provided. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "413":
          description: The search has found too many results. Additional filters must be provided in the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'

                
  /series/{seriesId}/items:
    get:
      tags: 
      - Items
      summary: Get Collection items for a specific series
      description: Retrieves the collection items for the active sesion's user and the provided series
      operationId: seriesByIdItemsGET
      parameters:
      - in: path
        required: true
        name: seriesId
        schema:
          type: integer
        description: Id of the series
      - in: cookie
        name: banknotes.ODB.username
        schema:
          type: string
        required: true
        description: user for whom the items are retrieved
      responses:
        "200":
          description: Success. List of Items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denomination:
                      type: integer
                    variants:
                      allOf:
                        - $ref: '#/components/schemas/variantKey'
                        - type: object
                          properties:
                            description:
                              type: string
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/itemKey'
        "400":
          description: Invalid request. Query or cookie parameter is missing or has no valid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "403":
          description: User not logged-in or invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
                
                
                
  /grades:              
    get:
      tags: 
      - Miscellanea
      summary: Get banknotes grades
      description: Retrieves the standard grades used to evaluate th conservation of the banknotes
      operationId: gradesGET
      responses:
        "200":
          description: Success. 
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/grade'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'          
              
                
components:
  parameters:
    territoryId:
      in: path
      name: territoryId
      required: true
      description: Id of the territory
      schema:
        type: integer
    currencyId:
      in: path
      name: currencyId
      required: true
      description: Id of the currency
      schema:
        type: integer
    cookieUsername:
      in: cookie
      name: banknotes.ODB.username
      required: true
      description: logged in user name
      schema:
        type: string
    cookieSessionId:
      in: cookie
      name: wid
      required: true
      description: Session Id for the logged in user
      schema: 
        type: string
    searchContinentId:
      in: query
      name: continentId
      required: false
      description: Retrieve resource from countries in this Continent
      schema:
        type: integer
    searchTerTypeId:
      in: query
      name: terTypeId
      required: false
      description: Retrieve resource from countries of this type
      schema:
        type: integer
    searchTerStartDateFrom:
      in: query
      name: terStartDateFrom
      required: false
      description: Retrieve resource from countries founded in or after this year
      schema:
        type: integer
    searchTerStartDateTo:
      in: query
      name: terStartDateTo
      required: false
      description: Retrieve resource from countries founded in or before this year
      schema:
        type: integer
    searchTerEndDateFrom:
      in: query
      name: terEndDateFrom
      required: false
      description: Retrieve resource from countries disappeared in or after this year
      schema:
        type: integer
    searchTerEndDateTo:
      in: query
      name: terEndtDateTo
      required: false
      description: Retrieve resource from countries disappeared in or before this year
      schema:
        type: integer
    searchCurStartDateFrom:
      in: query
      name: curStartDateFrom
      required: false
      description: Retrieve resource of currencies created in or after this year
      schema:
        type: integer
    searchCurStartDateTo:
      in: query
      name: curStartDateTo
      required: false
      description: Retrieve resource of currencies created in or before this year
      schema:
        type: integer
    searchCurEndDateFrom:
      in: query
      name: curEndDateFrom
      required: false
      description: Retrieve resource of currencies disappeared in or after this year
      schema:
        type: integer
    searchCurEndDateTo:
      in: query
      name: curEndDateTo
      required: false
      description: Retrieve resource of currencies disappeared in or before this year
      schema:
        type: integer
    searchMinDenom:
      in: query
      name: minDenom
      required: false
      description: Retrieve resource with this or high denomination
      schema:
        type: integer
    searchMaxDenom:
      in: query
      name: maxDenom
      required: false
      description: Retrieve resource with this or lower denomination
      schema:
        type: integer
    searchIssueYearFrom:
      in: query
      name: issueYearFrom
      required: false
      description: Retrieve resource with issue date in or after this year
      schema:
        type: integer
    searchIssueYearTo:
      in: query
      name: issueYearTo
      required: false
      description: Retrieve resource with issue date in or before this year  
      schema:
        type: integer


  schemas:
    continent:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string


    territoryTypeKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
          
          
    territoryType:
      allOf:    
      - $ref: '#/components/schemas/territoryTypeKey'
      - type: object
        required:
        - abbreviation
        - description
        properties:
          abbreviation:
            type: string
          description:
            type: string


    territoryKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string


    territory:
      allOf:    
      - $ref: '#/components/schemas/territoryKey'
      - type: object
        required:
        - continent
        - territoryType
        - officialName
        - start
        properties:
          continent:
            $ref: '#/components/schemas/continent'
          territoryType:
            $ref: '#/components/schemas/territoryTypeKey'
          iso2:
            $ref: '#/components/schemas/iso2'
          officialName:
            type: string
          start:
            type: integer
          end:
            type: integer
          parent:
           $ref: '#/components/schemas/territoryKey'
          predecessors:
            type: array
            items:
              $ref: '#/components/schemas/territoryKey'
          successors:
            type: array
            items:
             $ref: '#/components/schemas/territoryKey'
          description:
            type: string


    territoryCatStats:
      allOf:    
      - $ref: '#/components/schemas/territoryKey'
      - type: object
        required:
        - continentId
        - territoryTypeId
        - start
        - numCurrencies
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          continentId:
            type: integer
          territoryTypeId:
            type: integer
          start:
            type: integer
          end:
            type: integer
          numCurrencies:
            type: integer
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer


    territoryColStats:
      allOf:    
      - $ref: '#/components/schemas/territoryCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numCurrencies
            - numSeries
            - numDenominations
            - numNotes
            - numVariants
            - price
            properties:
              numCurrencies:
                type: integer
              numSeries:
                type: integer
              numDenominations:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    currencyKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        iso3:
          $ref: '#/components/schemas/iso3'
        name:
          type: string
          
          
    currencyType:
      type: string
      enum:
      - "OWNED"
      - "SHARED"
    
    
    currency:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - currencyType
        - territory
        - fullName
        - start
        properties:
          currencyType:
            $ref: '#/components/schemas/currencyType'
          territory:
            allOf:    
            - $ref: '#/components/schemas/territoryKey'
            - type: object
              required:
              - continent
              properties:
                continent:
                  $ref: '#/components/schemas/continent'
          symbol:
            type: string
          iso3:
            $ref: '#/components/schemas/iso3'
          fullName:
            type: string
          units:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: number
                abbreviation:
                  type: string
          start:
            type: string
          end:
            type: string
          predecessor:
            allOf:    
            - $ref: '#/components/schemas/currencyKey'
            - type: object
              required:
              - rate
              properties:
                rate:
                  type: number
          successor:
            allOf:    
            - $ref: '#/components/schemas/currencyKey'
            - type: object
              required:
              - rate
              properties:
                rate:
                  type: number
          description:
            type: string


    currencyCatStats:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - currencyType
        - territory
        - start
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          currencyType:
            $ref: '#/components/schemas/currencyType'
          territory:
            allOf:    
            - $ref: '#/components/schemas/territoryKey'
            - type: object
              required:
              - continent
              properties:
                continent:
                  $ref: '#/components/schemas/continent'
          symbol:
            type: string
          start:
            type: integer
          end:
            type: integer
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer


    currencyColStats:
      allOf:    
      - $ref: '#/components/schemas/currencyCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numSeries
            - numDenominations
            - numNotes
            - numVariants
            - price
            properties:
              numSeries:
                type: integer
              numDenominations:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
            
    
    currencyByTerCatStats:
      allOf:    
      - $ref: '#/components/schemas/currencyKey'
      - type: object
        required:
        - currencyType
        - start
        - numSeries
        - numDenominations
        - numNotes
        - numVariants
        properties:
          currencyType:
            $ref: '#/components/schemas/currencyType'
          symbol:
            type: string
          start:
            type: integer
          end:
            type: integer
          numSeries:
            type: integer
          numDenominations:
            type: integer
          numNotes:
            type: integer
          numVariants:
            type: integer
            
      
    currencyByTerColStats:
      allOf:    
      - $ref: '#/components/schemas/currencyByTerCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numSeries
            - numDenominations
            - numNotes
            - numVariants
            - price
            properties:
              numSeries:
                type: integer
              numDenominations:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
                
                
    denominationCatStats:
      type: object
      required:
      - denomination
      - numTerritories
      - numCurrencies
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numVariants:
          type: integer


    denominationColStats:
      allOf:    
      - $ref: '#/components/schemas/denominationCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numTerritories
            - numCurrencies
            - numSeries
            - numVariants
            - price
            properties:
              numTerritories:
                type: integer
              numCurrencies:
                type: integer
              numSeries:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    denominationByTerCatStats:
      type: object
      required:
      - denomination
      - numCurrencies
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numVariants:
          type: integer


    denominationByTerColStats:
      allOf:    
      - $ref: '#/components/schemas/denominationByTerCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numCurrencies
            - numSeries
            - numVariants
            - price
            properties:
              numCurrencies:
                type: integer
              numSeries:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    denominationByCurCatStats:
      type: object
      required:
      - denomination
      - numSeries
      - numVariants
      properties:
        denomination:
          type: number
        numSeries:
          type: integer
        numVariants:
          type: integer


    denominationByCurColStats:
      allOf:    
      - $ref: '#/components/schemas/denominationByCurCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numSeries
            - numVariants
            - price
            properties:
              numSeries:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    issueYearCatStats:
      type: object
      required:
      - issueYear
      - numTerritories
      - numCurrencies
      - numSeries
      - numDenominations
      - numNotes
      - numVariants
      properties:
        issueYear:
          type: integer
        numTerritories:
          type: integer
        numCurrencies:
          type: integer
        numSeries:
          type: integer
        numDenominations:
          type: integer
        numNotes:
          type: integer
        numVariants:
          type: integer

    issueYearColStats:
      allOf:    
      - $ref: '#/components/schemas/issueYearCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numTerritories
            - numCurrencies
            - numSeries
            - numDenominations
            - numNotes
            - numVariants
            - price
            properties:
              numTerritories:
                type: integer
              numCurrencies:
                type: integer
              numSeries:
                type: integer
              numDenominations:
                type: integer
              numNotes:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    issueYearByTerCatStats:
      type: object
      required:
      - issueYear
      - numDenominations
      - numVariants
      properties:
        issueYear:
          type: integer
        numDenominations:
          type: integer
        numVariants:
          type: integer

    issueYearByTerColStats:
      allOf:    
      - $ref: '#/components/schemas/issueYearByTerCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numDenominations
            - numVariants
            - price
            properties:
              numDenominations:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
                
        
    issueYearByCurCatStats:
      type: object
      required:
      - issueYear
      - numDenominations
      - numVariants
      properties:
        issueYear:
          type: integer
        numDenominations:
          type: integer
        numVariants:
          type: integer

    issueYearByCurColStats:
      allOf:    
      - $ref: '#/components/schemas/issueYearByCurCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numDenominations
            - numVariants
            - price
            properties:
              numDenominations:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
                
                
    seriesKey:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: integer
        name:
          type: string
          
    seriesCatStats:
      allOf:    
      - $ref: '#/components/schemas/seriesKey'
      - type: object
        required:
        - start
        - currency
        - numDenominations
        - numVariants
        properties:
          start:
            type: integer
          end:
            type: integer
          currency:
            $ref: '#/components/schemas/currencyKey'
          numDenominations:
            type: integer
          numVariants:
            type: integer
          

    seriesColStats:
      allOf:    
      - $ref: '#/components/schemas/seriesCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numDenominations
            - numVariants
            - price
            properties:
              numDenominations:
                type: integer
              numVariants:
                type: integer
              price:
                type: number
  

    seriesByCurCatStats:
      allOf:    
      - $ref: '#/components/schemas/seriesKey'
      - type: object
        required:
        - start
        - numDenominations
        - numVariants
        properties:
          start:
            type: integer
          end:
            type: integer
          numDenominations:
            type: integer
          numVariants:
            type: integer

    seriesByCurColStats:
      allOf:    
      - $ref: '#/components/schemas/seriesByCurCatStats'
      - type: object
        required:
        - collectionStats
        properties:
          collectionStats:
            type: object
            required:
            - numDenominations
            - numVariants
            - price
            properties:
              numDenominations:
                type: integer
              numVariants:
                type: integer
              price:
                type: number


    variantKey:
      type: object
      required:
      - variantId
      - catalogueId
      - issueYear
      properties:
        variantId:
          type: integer
        catalogueId:
          type: integer
        issueYear:
          type: integer
        printedDate:
          type: string

    variantTree:
      allOf:    
        - $ref: '#/components/schemas/variantKey'
        - type: object
          required:
          - denomination
          - seriesId
          - seriesName
          - currencyId
          - currencyName
          - territoryId
          - territoryName
          properties:
            denomination:
              type: integer
            seriesId:
              type: integer
            seriesName:
              type: string
            currencyId:
              type: integer
            currencyName:
              type: string
            territoryId:
              type: integer
            territoryName:
              type: string
   
   
    itemKey:
      type: object
      required:
      - id
      - grade
      - price
      properties:
        id:
          type: integer
        grade:
          type: string
        price:
          type: number

    itemTree: 
      allOf:    
        - $ref: '#/components/schemas/variantTree'
        - type: object
          properties:
            item:
              $ref: '#/components/schemas/itemKey'
        

    item:
      allOf:    
        - $ref: '#/components/schemas/itemKey'
        - type: object
          required:
          - variantId
          - quantity
          properties:
            variantId:
              type: integer
            quantity:
              type: integer
            seller:
              type: string
            purchaseDate:
              type: string
            description:
              type: string
          

    grade:
      type: object
      required:
      - value
      - grade
      - name
      - description
      properties:
        value:
          type: integer
        grade:
          type: string
        name:
          type: string
        description:
          type: string
          

    iso2:
      type: string
      maxLength: 2
      minLength: 2


    iso3:
      type: string
      maxLength: 3
      minLength: 3
    

    exception:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        description:
          type: string